* Create basic parsing for Bomb Jack format sprites/tiles to test the theory


* Output palette sizes debug info


* Warn if a specific tile runs out of colours
    Try to pick the nearest best alternative colour?
    Done> Or automatically strip out the processed pixels and reprocess the tile with any remaining, to create automatic overlays?



* Look for duplicate palettes



* Colour quantize for each tile



* Add char and colour screen output



* Output palettes
    Tests worked quite well: https://twitter.com/MartinPiper/status/1218539634847711232



* Command line options for background and stacked sprite conversions
    Tested with the simulated hardware, working



* Command line parameters: Unify the background and sprite conversion with a single palette pass without pixel output, followed by pixel output, no palette offset for the stacked sprites
    * Looks good, except the first sprite is using palette 3 instead of the correct choice, which is causing a sprite with bright purple
        Look for rejectPalette, it does not seem to be working correctly and picking bright purple even though it doesn't match the forcedColourIndex
        * Was missing currentPaletteIndex++ when rejectPalette was triggered
