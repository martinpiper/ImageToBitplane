* Character screen conversion for: oldbridge cropped_chars.bmp
	Config: oldbridge char screen
	* Added indexPick8_8 choice
	* Done - Load into a unit test feature file, with just the char screen plane enabled.
		BDD6502\features\TestVideoHardware Chars.feature
		Best cofnig to use is: oldbridge char screen with rgbfactor
	* Needs to cope with extra character indexes (lower 2 bits of the upper colour nybble) since: num tiles=820
		Add command line flag




* // TODO: Chars will need to be handled, for their chosen palette range



* Option to ignore forced index 0 pixels at input, makes them transparent



* // TODO: palette = (HashMap<Integer, Integer>) forcedColourIndex.clone();
    Palette loading will need to enforce the palette size groups based on the original palette
	
	
	
* To improve duplicate character and flips detection, try permutations of output planes and *once only* reorganise the palette.
	Or do not sort colours in palettes, this will preserve the ordering and weighting of pixels detected in chars.
	This will need some carefully created test data to exercise these cases.



* Try the full "old bridge" in mode7 with full 256 colour palette and index 0=0,0,0



* Tidy code and unit test



* Detect identical output tile data, with H/V flips, from the output binary point of view and avoid
    Instead use the original index for screen output



* Make the inputs and outputs configurable via a text config file, with includes
