* // TODO: palette = (HashMap<Integer, Integer>) forcedColourIndex.clone();
    Palette loading will need to enforce the palette size groups based on the original palette
	
	
	
* Have the option, for mode7, to support loading sparse palettes and then taking into account the forced colour(s) use the spaces for extra colours
	Then output new palettes.



* To improve duplicate character and flips detection, try permutations of output planes and *once only* reorganise the palette.
	Or do not sort colours in palettes, this will preserve the ordering and weighting of pixels detected in chars.
	This will need some carefully created test data to exercise these cases.



* Try the full "old bridge" in mode7 with full 256 colour palette and index 0=0,0,0



* Tidy code and unit test



* Detect identical output tile data, with H/V flips, from the output binary point of view and avoid
    Instead use the original index for screen output



* Make the inputs and outputs configurable via a text config file, with includes
